From de49e75cc0b51a409dee8baf2d116634e7a95558 Mon Sep 17 00:00:00 2001
From: mattip <matti.picus@gmail.com>
Date: Wed, 20 Nov 2024 21:08:49 +0200
Subject: [PATCH 10/10] 
 patch-bundled-fmt-in-spdlog-for-invalid-char8_type.patch

---
 bazel/ray_deps_setup.bzl                      |  3 ++
 .../patches/spdlog-fmt-no-char8_type.patch    | 41 +++++++++++++++++++
 2 files changed, 44 insertions(+)
 create mode 100644 thirdparty/patches/spdlog-fmt-no-char8_type.patch

diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index 808bdfa5d5..f9d8316ea2 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -130,6 +130,9 @@ def ray_deps_setup():
         build_file = "@com_github_ray_project_ray//bazel:BUILD.spdlog",
         urls = ["https://github.com/gabime/spdlog/archive/v1.12.0.zip"],
         sha256 = "6174bf8885287422a6c6a0312eb8a30e8d22bcfcee7c48a6d02d1835d7769232",
+        patches = [
+            "@com_github_ray_project_ray//thirdparty/patches:spdlog-fmt-no-char8_type.patch",
+        ],
     )
 
     auto_http_archive(
diff --git a/thirdparty/patches/spdlog-fmt-no-char8_type.patch b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
new file mode 100644
index 0000000000..b95a008ea4
--- /dev/null
+++ b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
@@ -0,0 +1,41 @@
+diff -u
+--- include/spdlog/fmt/bundled/format.h
++++ include/spdlog/fmt/bundled/format.h
+@@ -571,12 +571,6 @@
+   return out + count;
+ }
+ 
+-#ifdef __cpp_char8_t
+-using char8_type = char8_t;
+-#else
+-enum char8_type : unsigned char {};
+-#endif
+-
+ template <typename OutChar, typename InputIt, typename OutputIt>
+ FMT_CONSTEXPR FMT_NOINLINE auto copy_str_noinline(InputIt begin, InputIt end,
+                                                   OutputIt out) -> OutputIt {
+@@ -710,11 +704,6 @@
+   return num_code_points;
+ }
+ 
+-inline auto compute_width(basic_string_view<char8_type> s) -> size_t {
+-  return compute_width(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()));
+-}
+-
+ template <typename Char>
+ inline auto code_point_index(basic_string_view<Char> s, size_t n) -> size_t {
+   size_t size = s.size();
+@@ -731,12 +720,6 @@
+   return s.size();
+ }
+ 
+-inline auto code_point_index(basic_string_view<char8_type> s, size_t n)
+-    -> size_t {
+-  return code_point_index(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()), n);
+-}
+-
+ #ifndef FMT_USE_FLOAT128
+ #  ifdef __SIZEOF_FLOAT128__
+ #    define FMT_USE_FLOAT128 1
-- 
2.43.0


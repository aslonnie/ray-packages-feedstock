From 692e9e8cdb1b5d2e26192259301a578a15a41231 Mon Sep 17 00:00:00 2001
From: Matti Picus <matti.picus@gmail.com>
Date: Sun, 19 Jan 2025 23:17:01 +1100
Subject: [PATCH] patch bundled fmt in spdlog for invalid char8_type

---
 bazel/ray_deps_setup.bzl                      | 38 +++++++++--------
 .../patches/spdlog-fmt-no-char8_type.patch    | 41 +++++++++++++++++++
 2 files changed, 62 insertions(+), 17 deletions(-)
 create mode 100644 thirdparty/patches/spdlog-fmt-no-char8_type.patch

diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index 02fddb01da..282a268ff0 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -86,20 +86,17 @@ def auto_http_archive(
 def ray_deps_setup():
     # Explicitly bring in protobuf dependency to work around
     # https://github.com/ray-project/ray/issues/14117
-    # This is copied from grpc's bazel/grpc_deps.bzl
-    #
-    # Pinned grpc version: v23.4
     http_archive(
         name = "com_google_protobuf",
-        sha256 = "76a33e2136f23971ce46c72fd697cd94dc9f73d56ab23b753c3e16854c90ddfd",
-        strip_prefix = "protobuf-2c5fa078d8e86e5f4bd34e6f4c9ea9e8d7d4d44a",
+        sha256 = "b2340aa47faf7ef10a0328190319d3f3bee1b24f426d4ce8f4253b6f27ce16db",
+        strip_prefix = "protobuf-28.2",
         urls = [
-            "https://github.com/protocolbuffers/protobuf/archive/2c5fa078d8e86e5f4bd34e6f4c9ea9e8d7d4d44a.tar.gz",
+            "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v28.2.tar.gz",
         ],
         patches = [
-            "@com_github_grpc_grpc//third_party:protobuf.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:protobuf-windows-const-nan.patch",
+            
         ],
-        patch_args = ["-p1"],
     )
 
     # NOTE(lingxuan.zlx): 3rd party dependencies could be accessed, so it suggests
@@ -112,6 +109,7 @@ def ray_deps_setup():
         sha256 = "afd656dbc18a886f9a1cc08a550bf5eb89de0d431e713eba3ae243391fb008a6",
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:redis-quiet.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:redis-ar-ranlib.patch",
         ],
         workspace_file_content = 'workspace(name = "com_github_antirez_redis")',
     )
@@ -134,6 +132,7 @@ def ray_deps_setup():
         # spdlog rotation filename format conflict with ray, update the format.
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:spdlog-rotation-file-format.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:spdlog-fmt-no-char8_type.patch",
         ],
         patch_args = ["-p1"],
     )
@@ -172,6 +171,9 @@ def ray_deps_setup():
         # If you update the Boost version, remember to update the 'boost' rule.
         url = "https://github.com/nelhage/rules_boost/archive/57c99395e15720e287471d79178d36a85b64d6f6.tar.gz",
         sha256 = "490d11425393eed068966a4990ead1ff07c658f823fd982fddac67006ccc44ab",
+        patches = [
+            "@com_github_ray_project_ray//thirdparty/patches:boost-zlib-fdopen.patch",
+        ],
     )
 
     auto_http_archive(
@@ -222,10 +224,10 @@ def ray_deps_setup():
     # TODO(owner): Upgrade abseil to latest version after protobuf updated, which requires to upgrade `rules_cc` first.
     auto_http_archive(
         name = "com_google_absl",
-        sha256 = "987ce98f02eefbaf930d6e38ab16aa05737234d7afbab2d5c4ea7adbe50c28ed",
-        strip_prefix = "abseil-cpp-20230802.1",
+        sha256 = "f50e5ac311a81382da7fa75b97310e4b9006474f9560ac46f54a9967f07d4ae3",
+        strip_prefix = "abseil-cpp-20240722.0",
         urls = [
-            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20230802.1.tar.gz",
+            "https://github.com/abseil/abseil-cpp/archive/refs/tags/20240722.0.tar.gz",
         ],
     )
 
@@ -239,16 +241,18 @@ def ray_deps_setup():
             # https://github.com/jupp0r/prometheus-cpp/pull/225
             "@com_github_ray_project_ray//thirdparty/patches:prometheus-windows-zlib.patch",
             "@com_github_ray_project_ray//thirdparty/patches:prometheus-windows-pollfd.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:prometheus-zlib.fdopen.patch",
         ],
     )
 
     auto_http_archive(
         name = "com_github_grpc_grpc",
         # NOTE: If you update this, also update @boringssl's hash.
-        url = "https://github.com/grpc/grpc/archive/refs/tags/v1.57.1.tar.gz",
-        sha256 = "0762f809b9de845e6a7c809cabccad6aa4143479fd43b396611fe5a086c0aeeb",
+        url = "https://github.com/grpc/grpc/archive/refs/tags/v1.67.1.tar.gz",
+        sha256 = "d74f8e99a433982a12d7899f6773e285c9824e1d9a173ea1d1fb26c9bd089299",
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:grpc-cython-copts.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:grpc-zlib-fdopen.patch",
         ],
     )
 
@@ -288,13 +292,13 @@ def ray_deps_setup():
     http_archive(
         # This rule is used by @com_github_grpc_grpc, and using a GitHub mirror
         # provides a deterministic archive hash for caching. Explanation here:
-        # https://github.com/grpc/grpc/blob/1ff1feaa83e071d87c07827b0a317ffac673794f/bazel/grpc_deps.bzl#L189
         # Ensure this rule matches the rule used by grpc's bazel/grpc_deps.bzl
++        # https://github.com/grpc/grpc/blob/v1.67.1/bazel/grpc_deps.bzl#L33
         name = "boringssl",
-        sha256 = "0675a4f86ce5e959703425d6f9063eaadf6b61b7f3399e77a154c0e85bad46b1",
-        strip_prefix = "boringssl-342e805bc1f5dfdd650e3f031686d6c939b095d9",
+        sha256 = "c70d519e4ee709b7a74410a5e3a937428b8198d793a3d771be3dd2086ae167c8",
+        strip_prefix = "boringssl-b8b3e6e11166719a8ebfa43c0cde9ad7d57a84f6",
         urls = [
-            "https://github.com/google/boringssl/archive/342e805bc1f5dfdd650e3f031686d6c939b095d9.tar.gz",
+            "https://github.com/google/boringssl/archive/b8b3e6e11166719a8ebfa43c0cde9ad7d57a84f6.tar.gz",
         ],
     )
 
diff --git a/thirdparty/patches/spdlog-fmt-no-char8_type.patch b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
new file mode 100644
index 0000000000..fdcbba413d
--- /dev/null
+++ b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
@@ -0,0 +1,41 @@
+diff -u
+--- a/include/spdlog/fmt/bundled/format.h
++++ b/include/spdlog/fmt/bundled/format.h
+@@ -571,12 +571,6 @@
+   return out + count;
+ }
+ 
+-#ifdef __cpp_char8_t
+-using char8_type = char8_t;
+-#else
+-enum char8_type : unsigned char {};
+-#endif
+-
+ template <typename OutChar, typename InputIt, typename OutputIt>
+ FMT_CONSTEXPR FMT_NOINLINE auto copy_str_noinline(InputIt begin, InputIt end,
+                                                   OutputIt out) -> OutputIt {
+@@ -710,11 +704,6 @@
+   return num_code_points;
+ }
+ 
+-inline auto compute_width(basic_string_view<char8_type> s) -> size_t {
+-  return compute_width(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()));
+-}
+-
+ template <typename Char>
+ inline auto code_point_index(basic_string_view<Char> s, size_t n) -> size_t {
+   size_t size = s.size();
+@@ -731,12 +720,6 @@
+   return s.size();
+ }
+ 
+-inline auto code_point_index(basic_string_view<char8_type> s, size_t n)
+-    -> size_t {
+-  return code_point_index(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()), n);
+-}
+-
+ #ifndef FMT_USE_FLOAT128
+ #  ifdef __SIZEOF_FLOAT128__
+ #    define FMT_USE_FLOAT128 1
-- 
2.39.5 (Apple Git-154)


From 692e9e8cdb1b5d2e26192259301a578a15a41231 Mon Sep 17 00:00:00 2001
From: Matti Picus <matti.picus@gmail.com>
Date: Sun, 19 Jan 2025 23:17:01 +1100
Subject: [PATCH] patch bundled fmt in spdlog for invalid char8_type

---
 bazel/ray_deps_setup.bzl                      | 38 +++++++++--------
 .../patches/spdlog-fmt-no-char8_type.patch    | 41 +++++++++++++++++++
 2 files changed, 62 insertions(+), 17 deletions(-)
 create mode 100644 thirdparty/patches/spdlog-fmt-no-char8_type.patch

diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index 02fddb01da..282a268ff0 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -132,6 +132,7 @@ def ray_deps_setup():
         # spdlog rotation filename format conflict with ray, update the format.
         patches = [
             "@com_github_ray_project_ray//thirdparty/patches:spdlog-rotation-file-format.patch",
+            "@com_github_ray_project_ray//thirdparty/patches:spdlog-fmt-no-char8_type.patch",
         ],
         patch_args = ["-p1"],
     )
diff --git a/thirdparty/patches/spdlog-fmt-no-char8_type.patch b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
new file mode 100644
index 0000000000..fdcbba413d
--- /dev/null
+++ b/thirdparty/patches/spdlog-fmt-no-char8_type.patch
@@ -0,0 +1,41 @@
+diff -u
+--- a/include/spdlog/fmt/bundled/format.h
++++ b/include/spdlog/fmt/bundled/format.h
+@@ -571,12 +571,6 @@
+   return out + count;
+ }
+ 
+-#ifdef __cpp_char8_t
+-using char8_type = char8_t;
+-#else
+-enum char8_type : unsigned char {};
+-#endif
+-
+ template <typename OutChar, typename InputIt, typename OutputIt>
+ FMT_CONSTEXPR FMT_NOINLINE auto copy_str_noinline(InputIt begin, InputIt end,
+                                                   OutputIt out) -> OutputIt {
+@@ -710,11 +704,6 @@
+   return num_code_points;
+ }
+ 
+-inline auto compute_width(basic_string_view<char8_type> s) -> size_t {
+-  return compute_width(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()));
+-}
+-
+ template <typename Char>
+ inline auto code_point_index(basic_string_view<Char> s, size_t n) -> size_t {
+   size_t size = s.size();
+@@ -731,12 +720,6 @@
+   return s.size();
+ }
+ 
+-inline auto code_point_index(basic_string_view<char8_type> s, size_t n)
+-    -> size_t {
+-  return code_point_index(
+-      string_view(reinterpret_cast<const char*>(s.data()), s.size()), n);
+-}
+-
+ #ifndef FMT_USE_FLOAT128
+ #  ifdef __SIZEOF_FLOAT128__
+ #    define FMT_USE_FLOAT128 1
-- 
2.39.5 (Apple Git-154)

